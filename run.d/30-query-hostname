#!/bin/sh
#
# 30-ask-hostname - request the user to type in the hostname of the local host
#
# Copyright Â© martin f. krafft <madduck@madduck.net>
# Released under the terms of the Artistic Licence 2.0
#
set -eu

ME=molly-guard

# Walk up the process tree until PID 1 is reached or a process with 'sshd' in
# its command line is met. Return success if such a process is found.
is_child_of_sshd() {
  pid=$$
  ppid=$PPID
  # Be a bit paranoid with the guard, should some horribly broken system
  # provide a strange process hierarchy. '[ $pid -ne 1 ]' should be enough for
  # sane systems.
  [ -z "$pid" ] || [ -z "$ppid" ] && return 2
  while [ $pid -gt 1 ] && [ $pid -ne $ppid ]; do
      ps=$(ps -p $pid -wwo ppid=,command=)
      # Strip leading whitespace
      ps=${ps#"${ps%%[![:space:]]*}"}
      if [ "${ps#*sshd}" = "sshd" ]; then
        return 0
      fi
      pid=$ppid
      ppid=${ps%% *}
  done
  return 1
}

[ -f "$MOLLYGUARD_SETTINGS" ] && . "$MOLLYGUARD_SETTINGS"

PRETEND_SSH=0
for arg in "$@"; do
  case "$arg" in
    (*-pretend-ssh) PRETEND_SSH=1;;
  esac
done

# require an interactive terminal connected to stdin
test -t 0 || exit 0

# we've been asked to always protect this host
case "${ALWAYS_QUERY_HOSTNAME:-0}" in
  0|false|False|no|No|off|Off)
    # only run if we are being called over SSH, that is if the current terminal
    # was created by sshd.
    PTS=$(tty)
    if ! /usr/bin/pgrep -a -f "^sshd.*${PTS#/dev/}[[:>:]]" >/dev/null \
      && [ -z "${SSH_CONNECTION:-}" ] \
      && ! is_child_of_sshd; then
        if [ $PRETEND_SSH -eq 1 ]; then
          echo "I: $ME: this is not an SSH session, but --pretend-ssh was given..." >&2
        else
          exit 0
        fi
    else
      echo "W: $ME: SSH session detected!" >&2
    fi
    ;;
  *)
    echo "I: $ME: $MOLLYGUARD_CMD is always molly-guarded on this system." >&2
    ;;
esac

HOSTNAME="$(hostname -s)"

sigh()
{
  echo "Good thing I asked; I won't $MOLLYGUARD_CMD $HOSTNAME ..." >&2
  exit 1
}

trap 'echo;sigh' 1 2 3 9 10 12 15

printf "%s" "Please type in hostname of the machine to $MOLLYGUARD_CMD: "
read HOSTNAME_USER || :

[ "$HOSTNAME_USER" = "$HOSTNAME" ] || sigh

trap - 1 2 3 9 10 12 15

exit 0
